{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../ngx-tetris/src/lib/tetris-core.component\";\nconst _c0 = [\"game\"];\nfunction ErrorComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 9);\n  }\n}\nexport class ErrorComponent {\n  constructor() {\n    this._tetris = undefined;\n    this.bw = false;\n    this.moveLeft = false;\n    this.moveDown = false;\n    this.moveRight = false;\n    this.rotate = false;\n    this.start = false;\n    this.stop = false;\n    this.reset = false;\n    this.lineJustCleared = false;\n  }\n  onLineCleared() {\n    console.log('line cleared');\n    this.lineJustCleared = true;\n    setTimeout(() => {\n      this.lineJustCleared = false;\n    }, 500); // Adjust this delay to match your CSS animation duration\n  }\n\n  onGameOver() {\n    alert('game over');\n  }\n  onRotateButtonPressed() {\n    this._tetris.actionRotate();\n  }\n  handleKeyboardEvent(event) {\n    switch (event.key) {\n      case 'ArrowLeft':\n        this._tetris.actionLeft();\n        break;\n      case 'ArrowRight':\n        this._tetris.actionRight();\n        break;\n      case 'ArrowUp':\n        this._tetris.actionRotate();\n        break;\n      case 'ArrowDown':\n        this._tetris.actionDown();\n        break;\n      case ' ':\n        // Space key for starting the game\n        this._tetris.actionStart();\n        break;\n      case 'p':\n        // 'p' key for stopping the game\n        this._tetris.actionStop();\n        break;\n      case 'r':\n        // 'r' key for resetting the game\n        this._tetris.actionReset();\n        break;\n      case 'd':\n        // 'd' key for resetting the game\n        this._tetris.actionDrop();\n        break;\n    }\n  }\n  static #_ = this.ɵfac = function ErrorComponent_Factory(t) {\n    return new (t || ErrorComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ErrorComponent,\n    selectors: [[\"app-error\"]],\n    viewQuery: function ErrorComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tetris = _t.first);\n      }\n    },\n    hostBindings: function ErrorComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function ErrorComponent_keydown_HostBindingHandler($event) {\n          return ctx.handleKeyboardEvent($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    decls: 48,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"tetris-container\"], [\"tileSize\", \"20px\", 3, \"lineCleared\", \"gameOver\"], [\"game\", \"\"], [\"class\", \"line-cleared-animation\", 4, \"ngIf\"], [1, \"controls\"], [3, \"click\"], [2, \"height\", \"20px\"], [\"colspan\", \"3\"], [1, \"line-cleared-animation\"]],\n    template: function ErrorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"tetris-core\", 2, 3);\n        i0.ɵɵlistener(\"lineCleared\", function ErrorComponent_Template_tetris_core_lineCleared_2_listener() {\n          return ctx.onLineCleared();\n        })(\"gameOver\", function ErrorComponent_Template_tetris_core_gameOver_2_listener() {\n          return ctx.onGameOver();\n        });\n        i0.ɵɵtemplate(4, ErrorComponent_div_4_Template, 1, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"table\", 5)(6, \"tr\")(7, \"td\")(8, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ErrorComponent_Template_button_click_8_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(3);\n          return i0.ɵɵresetView(_r0.actionStart());\n        });\n        i0.ɵɵtext(9, \"Start\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"td\")(11, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ErrorComponent_Template_button_click_11_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(3);\n          return i0.ɵɵresetView(_r0.actionStop());\n        });\n        i0.ɵɵtext(12, \"Stop\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"td\")(14, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ErrorComponent_Template_button_click_14_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(3);\n          return i0.ɵɵresetView(_r0.actionReset());\n        });\n        i0.ɵɵtext(15, \"Reset\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(16, \"td\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"tr\");\n        i0.ɵɵelement(18, \"td\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"tr\");\n        i0.ɵɵelement(20, \"td\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"tr\");\n        i0.ɵɵelement(22, \"td\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"tr\");\n        i0.ɵɵelement(24, \"td\");\n        i0.ɵɵelementStart(25, \"td\")(26, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ErrorComponent_Template_button_click_26_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(3);\n          return i0.ɵɵresetView(_r0.actionRotate());\n        });\n        i0.ɵɵtext(27, \"Rotate\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"tr\")(29, \"td\")(30, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ErrorComponent_Template_button_click_30_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(3);\n          return i0.ɵɵresetView(_r0.actionLeft());\n        });\n        i0.ɵɵtext(31, \"Left\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(32, \"td\");\n        i0.ɵɵelementStart(33, \"td\")(34, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ErrorComponent_Template_button_click_34_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(3);\n          return i0.ɵɵresetView(_r0.actionRight());\n        });\n        i0.ɵɵtext(35, \"Right\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(36, \"tr\");\n        i0.ɵɵelement(37, \"td\");\n        i0.ɵɵelementStart(38, \"td\")(39, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ErrorComponent_Template_button_click_39_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(3);\n          return i0.ɵɵresetView(_r0.actionDown());\n        });\n        i0.ɵɵtext(40, \"Down\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(41, \"td\")(42, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ErrorComponent_Template_button_click_42_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(3);\n          return i0.ɵɵresetView(_r0.actionDrop());\n        });\n        i0.ɵɵtext(43, \"Drop\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(44, \"tr\", 7);\n        i0.ɵɵelement(45, \"td\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"tr\");\n        i0.ɵɵelement(47, \"td\", 8);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"black-and-white\", ctx.bw);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.lineJustCleared);\n      }\n    },\n    dependencies: [i1.NgIf, i2.TetrisCoreComponent],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 556:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(1:1) C:\\\\\\\\Users\\\\\\\\Tasnim\\\\\\\\OneDrive\\\\\\\\Desktop\\\\\\\\Tetris\\\\\\\\Hello\\\\\\\\front\\\\\\\\src\\\\\\\\app\\\\\\\\views\\\\\\\\error\\\\\\\\error.component.css Unknown word\\\\n\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 1 | \\\\u001b[39mpublic bw = false\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m   | \\\\u001b[39m\\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 2 | \\\\u001b[39m\\\\n \\\\u001b[90m 3 | \\\\u001b[39m\\\\u001b[90m\\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[556]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=error.component.css.map*/\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ErrorComponent","constructor","undefined","onLineCleared","console","log","lineJustCleared","setTimeout","onGameOver","alert","onRotateButtonPressed","_tetris","actionRotate","handleKeyboardEvent","event","key","actionLeft","actionRight","actionDown","actionStart","actionStop","actionReset","actionDrop","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\Tasnim\\OneDrive\\Desktop\\Tetris\\Hello\\front\\src\\app\\views\\error\\error.component.html","C:\\Users\\Tasnim\\OneDrive\\Desktop\\Tetris\\Hello\\front\\src\\app\\views\\error\\error.component.ts"],"sourcesContent":["<div class=\"container\">\n  <div class=\"tetris-container\">\n\n    <tetris-core #game\n      [class.black-and-white]=\"bw\"\n      tileSize=\"20px\"\n      (lineCleared)=\"onLineCleared()\"\n      (gameOver)=\"onGameOver()\">\n\n      <!-- Animation div -->\n      <div class=\"line-cleared-animation\" *ngIf=\"lineJustCleared\"></div>\n\n    </tetris-core>\n\n\n<table class=\"controls\">\n    <tr>\n        <td><button (click)=\"game.actionStart()\">Start</button></td>\n        <td><button (click)=\"game.actionStop()\">Stop</button></td>\n        <td><button (click)=\"game.actionReset()\">Reset</button></td>\n        \n\n        <td></td>\n    </tr>\n    <tr><td></td></tr>\n    <tr><td></td></tr>\n    <tr><td></td></tr>\n    <tr>\n        <td></td>\n        <td><button (click)=\"game.actionRotate()\">Rotate</button></td>\n    </tr>\n    <tr>\n        <td><button (click)=\"game.actionLeft()\">Left</button></td>\n        <td></td>\n        <td><button (click)=\"game.actionRight()\">Right</button></td>\n\n    </tr>\n    <tr>\n        <td></td>\n        <td><button (click)=\"game.actionDown()\">Down</button></td>\n        <td><button (click)=\"game.actionDrop()\">Drop</button></td>\n    </tr>\n    <tr style=\"height: 20px\">\n        <td></td>\n    </tr>\n    <tr>\n        <td colspan=\"3\">\n       \n        </td>\n    </tr>\n</table>\n</div></div>","import { Component, HostListener, ViewChild } from '@angular/core';\nimport {TetrisCoreComponent} from 'ngx-tetris';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent  {\n\n  @ViewChild('game')\n  private _tetris: TetrisCoreComponent = undefined as any;\n\n  public bw = false;\n  public moveLeft = false;\n  public moveDown = false;\n  public moveRight = false;\n  public rotate = false;\n  public start = false;\n  public stop = false;\n  public reset = false;\n\n\n  lineJustCleared: boolean = false;\n\n  onLineCleared() {\n    console.log('line cleared');\n    this.lineJustCleared = true;\n    setTimeout(() => {\n      this.lineJustCleared = false;\n    }, 500); // Adjust this delay to match your CSS animation duration\n  }\n  public onGameOver() {\n      alert('game over');\n  }\n\n  public onRotateButtonPressed() {\n      this._tetris.actionRotate();\n  }\n  @HostListener('document:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    switch (event.key) {\n      case 'ArrowLeft':\n        this._tetris.actionLeft();\n        break;\n      case 'ArrowRight':\n        this._tetris.actionRight();\n        break;\n      case 'ArrowUp':\n        this._tetris.actionRotate();\n        break;\n      case 'ArrowDown':\n        this._tetris.actionDown();\n        break;\n        case ' ': // Space key for starting the game\n        this._tetris.actionStart();\n        break;\n      case 'p': // 'p' key for stopping the game\n        this._tetris.actionStop();\n        break;\n      case 'r': // 'r' key for resetting the game\n        this._tetris.actionReset();\n        break;\n        case 'd': // 'd' key for resetting the game\n        this._tetris.actionDrop();\n        break;\n\n    }\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}