{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { TileComponent } from \"../tile/tile.component\";\nlet BoardComponent = class BoardComponent {\n  constructor(_manager, _elRef) {\n    this._manager = _manager;\n    this._elRef = _elRef;\n  }\n  ngAfterViewInit() {\n    if (this._manager.settings.tileSize) {\n      const bb = this.tile.el.nativeElement.getBoundingClientRect();\n      const TILE_MARGIN = 1; //px\n      const oneTileSpace = bb.width + 2 * TILE_MARGIN;\n      const boardWidth = oneTileSpace * this._manager.elementsInRow;\n      this._elRef.nativeElement.style['width'] = boardWidth + 'px';\n    }\n  }\n};\n__decorate([Input()], BoardComponent.prototype, \"grid\", void 0);\n__decorate([ViewChild(TileComponent)], BoardComponent.prototype, \"tile\", void 0);\nBoardComponent = __decorate([Component({\n  selector: 'board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})], BoardComponent);\nexport { BoardComponent };","map":{"version":3,"mappings":";AAAA,SAAQA,SAAS,EAAcC,KAAK,EAAEC,SAAS,QAAO,eAAe;AAErE,SAAQC,aAAa,QAAO,wBAAwB;AAO7C,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAKvBC,YACUC,QAA4B,EAC5BC,MAAkB;IADlB,aAAQ,GAARD,QAAQ;IACR,WAAM,GAANC,MAAM;EAGhB;EAEAC,eAAe;IACX,IAAI,IAAI,CAACF,QAAQ,CAACG,QAAQ,CAACC,QAAQ,EAAE;MACjC,MAAMC,EAAE,GAAG,IAAI,CAACC,IAAI,CAACC,EAAE,CAACC,aAAa,CAACC,qBAAqB,EAAE;MAC7D,MAAMC,WAAW,GAAG,CAAC,CAAC,CAAC;MACvB,MAAMC,YAAY,GAAGN,EAAE,CAACO,KAAK,GAAG,CAAC,GAAGF,WAAW;MAC/C,MAAMG,UAAU,GAAGF,YAAY,GAAG,IAAI,CAACX,QAAQ,CAACc,aAAa;MAE7D,IAAI,CAACb,MAAM,CAACO,aAAa,CAACO,KAAK,CAAC,OAAO,CAAC,GAAGF,UAAU,GAAG,IAAI;;EAEpE;CACH;AArBYG,YAARrB,KAAK,EAAE,4CAAoB;AACFqB,YAAzBpB,SAAS,CAACC,aAAa,CAAC,4CAAsB;AAFtCC,cAAc,eAL1BJ,SAAS,CAAC;EACPuB,QAAQ,EAAE,OAAO;EACjBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACtC,CAAC,GACWrB,cAAc,CAsB1B;SAtBYA,cAAc","names":["Component","Input","ViewChild","TileComponent","BoardComponent","constructor","_manager","_elRef","ngAfterViewInit","settings","tileSize","bb","tile","el","nativeElement","getBoundingClientRect","TILE_MARGIN","oneTileSpace","width","boardWidth","elementsInRow","style","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Tasnim\\OneDrive\\Desktop\\Tetris\\Hello\\front\\ngx-tetris\\src\\lib\\board\\board.component.ts"],"sourcesContent":["import {Component, ElementRef, Input, ViewChild} from '@angular/core';\r\nimport {GameManagerService, Tile} from '../services/game-manager.service';\r\nimport {TileComponent} from \"../tile/tile.component\";\r\n\r\n@Component({\r\n    selector: 'board',\r\n    templateUrl: './board.component.html',\r\n    styleUrls: ['./board.component.css'],\r\n})\r\nexport class BoardComponent {\r\n    @Input() grid!: Array<Tile>;\r\n    @ViewChild(TileComponent) tile!: TileComponent;\r\n    public boardWidth!: number;\r\n\r\n    constructor(\r\n      private _manager: GameManagerService,\r\n      private _elRef: ElementRef\r\n    ) {\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this._manager.settings.tileSize) {\r\n            const bb = this.tile.el.nativeElement.getBoundingClientRect();\r\n            const TILE_MARGIN = 1; //px\r\n            const oneTileSpace = bb.width + 2 * TILE_MARGIN;\r\n            const boardWidth = oneTileSpace * this._manager.elementsInRow;\r\n\r\n            this._elRef.nativeElement.style['width'] = boardWidth + 'px';\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}